# -*- coding: utf-8 -*-
# 0002_account_data_migration
# Data migration for account association with existing users/organizations.
#
# Author:   Benjamin Bengfort <bbengfort@districtdatalabs.com>
# Created:  Fri Feb 12 21:57:11 2016 -0500
#
# Copyright (C) 2016 District Data Labs
# For license information, see LICENSE.txt
#
# ID: 0002_account_data_migration.py [] benjamin@bengfort.com $

"""
Data migration for account association with existing users/organizations.
Generated by Django 1.9.1 on 2016-02-12 21:57
"""

##########################################################################
## Imports
##########################################################################

from __future__ import unicode_literals

from django.db import migrations


##########################################################################
## Create Accounts for Existing Users and Organizations
##########################################################################

def update_users_account(apps, schema_editor):
    """
    We can't import the User model directly as it may be a newer version
    than this migration expects. We use the historical version.

    https://docs.djangoproject.com/en/1.9/topics/migrations/
    """
    Account = apps.get_model('account', 'Account')
    User = apps.get_model('auth', 'User')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    # Loop through all existing users and assign their account
    ctype = ContentType.objects.get_for_model(User)
    for user in User.objects.all():
        Account.objects.get_or_create(
            content_type=ctype,
            owner_id=user.id
        )


def update_organizations_account(apps, schema_editor):
    Account = apps.get_model('account', 'Account')
    Organization = apps.get_model('organization', 'Organization')
    ContentType  = apps.get_model('contenttypes', 'ContentType')

    # Loop through all existing organizations and assign their account
    ctype = ContentType.objects.get_for_model(Organization)
    for org in Organization.objects.all():
        Account.objects.get_or_create(
            content_type=ctype,
            owner_id=org.id
        )


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0001_initial'),
        ('organization', '__latest__'),
        ('members', '__latest__'),
        ('auth', '__latest__'),
        ('contenttypes', '__latest__'),
    ]

    operations = [
        migrations.RunPython(update_users_account, reverse_code=migrations.RunPython.noop,),
        migrations.RunPython(update_organizations_account, reverse_code=migrations.RunPython.noop,),
    ]
